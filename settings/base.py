"""
Django settings for hcms project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ENGINE_LOGS_PATH = 'engine_logs'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!

STATIC_ROOT = 'static'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
    'cw.apps.CwConfig',
    'su.apps.SuConfig',
    'users.apps.UsersConfig',
    'staff.apps.StaffConfig',
    'booking.apps.BookingConfig',
    'utils.apps.UtilsConfig',
    'complaint.apps.ComplaintConfig',
    'incident.apps.IncidentConfig',
    'performance.apps.PerformanceConfig',


    'background_task',
    'django_crontab',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'alerts',
    'cron',
    'channels',

]


AUTH_USER_MODEL = 'users.User'

ROLES = ('Executive','Service User','Care Worker', 'Coordinator', 'Admin', 'Finance', 'HR', 'Management', 'Supervisor')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
       'users.backends.HeaderAuthenticator',
       'users.backends.CookieAuthenticator',
       'users.backends.QueryParamsAuthenticator',
    ),
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
}

TOKEN_EXPIRE = 1500

CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hcms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hcms.wsgi.application'


DATABASE_ROUTERS = ['hcms.routers.conditional_router']

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, "upload")

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # Enable {{ STATIC_URL }} and {{ MEDIA_URL }}
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    }
]

# Send Grid
EMAIL_SENDING_ENABLED = False
DEFAULT_FROM_EMAIL = 'cysren-hcms@ntu.edu.sg'
EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"
SENDGRID_SANDBOX_MODE_IN_DEBUG = False

CRONJOBS = [
    ('*/10 * * * *', 'cron.monitor.notification_monitor'," > ~/log1 2>error1"),
    ('0 2 * * *', 'cron.monitor.daily_cron_jobs'," > ~/log2 2>error2"),
    ('0 22 * * *', 'cron.booking.run_booking_generation'," > ~/log3 2>error3"),
    ('0 * * * *', 'cron.monitor.hourly_cron_jobs'," > ~/log4 2>error4"),
    ('1 0 * 1 *', 'cron.monitor.yearly_cron_jobs'," > ~/log5 2>error5"),
    ('0 0 1 * *', 'cron.monitor.monthly_cron_jobs'," > ~/log6 2>error6"),
]

MAX_ATTEMPTS = 1
MAX_RUN_TIME = 86400
BACKGROUND_TASK_RUN_ASYNC = True
SERVER_URL = 'serverurl'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('localhost', '6379')],
        },
    }
}

ASGI_APPLICATION = 'hcms.routers.application'
USE_WEBSOCKETS = True

MAX_FILE_SIZE = 10 * 1024 * 1024
